class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
        vector<int> ret;
        int hash1[26] = { 0 };
        for (auto ch : p) ++hash1[ch - 'a'];
        int hash2[26] = { 0 };
        int m = p.length();
        for (int left = 0, right = 0, count = 0; right < s.length(); ++right)
        {
            //进窗口  count代表有效元素
            char in = s[right];
            if (++hash2[in - 'a'] <= hash1[in - 'a']) ++count;
            //判断 保证count是正确的
            if (right - left + 1 > m)
            {
                char out = s[left++];
                if (hash2[out - 'a']-- <= hash1[out - 'a']) --count;
            }  
            //更新结果
            if (count == m) ret.push_back(left);
        }
        return ret;
    }
};

https://leetcode.cn/problems/VabMRr/
