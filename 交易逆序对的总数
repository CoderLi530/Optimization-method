https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof/

class Solution {
public:
    void mergesort(vector<int>& nums, int left, int right, int& ret)
    {
        //终止
        if (left >= right) return;

        //拆分数组
        int mid = (left + right) / 2;
        mergesort(nums, left, mid, ret);
        mergesort(nums, mid + 1, right, ret);

        //合并排序
        vector<int> tmp(right - left + 1);
        int left1 = left, left2 = mid + 1, i = 0;
        while (left1 <= mid && left2 <= right)
        {
            if (nums[left1] > nums[left2])
            {
                ret += mid - left1 + 1;
                tmp[i++] = nums[left2++];
            } 
            else
            {
                tmp[i++] = nums[left1++];
            } 
        }
        //剩余数组的补充
        while (left1 <= mid) tmp[i++] = nums[left1++];
        while (left2 <= right) tmp[i++] = nums[left2++];

        //覆盖原数组
        for (int j = left; j <= right; ++j) nums[j] = tmp[j - left];
    }
    int reversePairs(vector<int>& record) {
        // //暴力解法超时
        // int ret = 0;
        // for (int i = 0; i < record.size(); ++i)
        //     for (int j = i + 1; j < record.size(); ++j)
        //         if (record[i] > record[j]) ret++;
        // return ret;

        //归并排序
        int ret = 0;
        mergesort(record, 0, record.size() - 1, ret);
        return ret;
    }
};
