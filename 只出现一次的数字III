class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        //位运算
        //对数组进行异或操作，得到最终结果x
        long x = 0;
        for (int& num : nums)
        {
            x ^= num;
        }
        //通过位操作还原x1和x2
        x &= -x;//某一位的数为1，其它位的数为0。注意x的范围可以会超过int范围
        int x1 = 0, x2 = 0;//假设x1某位的数为1，x2某位的数为0
        for (int& num : nums)
        {
            if (num & x)//某一类：某位的数为1
            {
                x1 ^= num;
            }
            else//某一类：某位的数为0
            {
                x2 ^= num;
            }
        }
        return {x1, x2};
    }
};


https://leetcode.cn/problems/single-number-iii/
