class Solution {
public:
    int maxArea(vector<int>& height) {
        //设置快慢指针
        int left = 0;
        int right = height.size() - 1;
        int v_max = min(height[right], height[left]) * (right - left);//先算出一个面积
        while (left < right)
        {

            if (height[left] < height[right])
            {
                left++;
            }
            else
            {
                right--;
            }
            int v = min(height[right], height[left]) * (right - left);//算出移动后的面积
            v_max = max(v, v_max);//比较出较大的面积
        }
        return v_max;
    }
};

https://leetcode.cn/problems/container-with-most-water/
