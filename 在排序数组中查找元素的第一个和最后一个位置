class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ret;
        if (nums.empty()) 
        {
            ret.push_back(-1);
            ret.push_back(-1);
            return ret;
        }
        int left = 0, right = nums.size() - 1;
        //找到左端点
        while (left < right)
        {
            int mid = left + (right - left) / 2;
            if (nums[mid] < target) left = mid + 1;
            else right = mid;
        }
        if (nums[left] == target) ret.push_back(left);
        //找到右端点
        left = 0, right = nums.size() - 1;
        while (left < right)
        {
            int mid = left + (right - left + 1) / 2;
            if (nums[mid] <= target) left = mid;
            else right = mid - 1;
        }
        if (nums[left] == target) ret.push_back(left);
        if (ret.empty()) 
        {
            ret.push_back(-1);
            ret.push_back(-1);
            return ret;
        }
        return ret;
    }
};

https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/
