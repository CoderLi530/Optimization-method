class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        //1. 创建前缀积数组
        int n = nums.size();
        vector<int> left_dp(n);
        vector<int> right_dp(n);
        //2. 初始化前缀积数组
        //分别对左右侧前缀积数组进行细节处理
        left_dp[0] = 1; right_dp[n - 1] = 1;
        //初始化左侧前缀积数组
        for (int i = 1; i <= n - 1; ++i)
        {
            left_dp[i] = left_dp[i - 1] * nums[i - 1];
        }
        //初始化右侧前缀积数组
        for (int i = n - 2; i >= 0; --i)
        {
            right_dp[i] = right_dp[i + 1] * nums[i + 1];
        }
        //3. 创建answer数组，进行初始化然后返回
        vector<int> ans(n);
        for (int i = 0; i < n; ++i)
        {
            ans[i] = left_dp[i] * right_dp[i];
        }
        return ans;
    }
};



https://leetcode.cn/problems/product-of-array-except-self/
